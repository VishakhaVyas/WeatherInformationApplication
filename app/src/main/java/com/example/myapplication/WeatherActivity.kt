package com.example.myapplicationimport android.content.Contextimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.view.Viewimport android.widget.TextViewimport androidx.annotation.NonNullimport androidx.fragment.app.Fragmentimport androidx.fragment.app.FragmentManagerimport androidx.fragment.app.FragmentPagerAdapterimport androidx.viewpager.widget.PagerAdapterimport androidx.viewpager.widget.ViewPagerimport com.google.android.material.tabs.TabLayoutclass WeatherActivity : AppCompatActivity() {   // val myContext: Context    lateinit var tabLayout: TabLayout    lateinit var viewPager: ViewPager    var currentLocation: String ?= null    lateinit var  lat: String    lateinit var  lon: String    var currentAddressFragment: CurrentAddressFragment = CurrentAddressFragment()    var weatherForcast: WeatherFragment = WeatherFragment()    //const val CURRENT_LOCATION = NULL    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_weather_info)        currentLocation = intent.getStringExtra("currentCity")        lat = intent.getStringExtra("lat").toString()        lon = intent.getStringExtra("lon").toString()        // Capture the layout's TextView and set the string as its text        tabLayout = findViewById<TabLayout>(R.id.tabLayout)        viewPager = findViewById<ViewPager>(R.id.viewPager)        tabLayout!!.addTab(tabLayout!!.newTab().setText("Current Weather"))        tabLayout!!.addTab(tabLayout!!.newTab().setText("5 Days Forecast"))        tabLayout!!.tabGravity = TabLayout.GRAVITY_FILL        val adapter = MyAdapter(this, supportFragmentManager, tabLayout!!.tabCount)        viewPager!!.adapter = adapter        viewPager!!.addOnPageChangeListener(TabLayout.TabLayoutOnPageChangeListener(tabLayout))        tabLayout!!.addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener {            override fun onTabSelected(tab: TabLayout.Tab) {                viewPager!!.currentItem = tab.position            }            override fun onTabUnselected(tab: TabLayout.Tab) {            }            override fun onTabReselected(tab: TabLayout.Tab) {            }        })        //val fragmentCurrentAddress: CurrentAddressFragment()        this.supportFragmentManager.beginTransaction()//        val txtCurrentLocation = findViewById<TextView>(R.id.txtCurrentLocation).apply {//            text = currentLocation//        }    }}class MyAdapter(private val myContext: Context, fm: FragmentManager, internal var totalTabs: Int) : FragmentPagerAdapter(fm) {    //private val mContext: Context =    //private val mContext: Context =  (myContext as WeatherActivity).myContext    // this is for fragment tabs    override fun getItem(position: Int): Fragment {        when (position) {            0 -> {                //var frag=TestFragment()                val bundle = Bundle().apply {                    putString("CURRENT_LOCATION", (myContext as WeatherActivity).currentLocation)                    putString("lat", (myContext as WeatherActivity).lat)                    putString("lon", (myContext as WeatherActivity).lon)                }                (myContext as WeatherActivity).currentAddressFragment.arguments = bundle                return (myContext as WeatherActivity).currentAddressFragment                //return CurrentAddressFragment()            }            1 -> {                //return WeatherFragment()                val bundle = Bundle().apply {                    putString("CURRENT_LOCATION", (myContext as WeatherActivity).currentLocation)                    putString("lat", (myContext as WeatherActivity).lat)                    putString("lon", (myContext as WeatherActivity).lon)                }                (myContext as WeatherActivity).weatherForcast.arguments = bundle                return (myContext as WeatherActivity).weatherForcast            }        }        throw IllegalStateException("position $position is invalid for this viewpager")    }    // this counts total number of tabs    override fun getCount(): Int {        return totalTabs    }}